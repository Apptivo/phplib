<?php// *****START CONFIGURATION*****	include(dirname(__FILE__) . DIRECTORY_SEPARATOR . 'conf' . DIRECTORY_SEPARATOR . 'config.php');	$configData = getConfig();	//Apptivo API credentials	$api_key = $configData['api_key'];	$access_key = $configData['access_key'];	$user_name = $configData['user_name'];		//Task assignee	$objectRefId = $configData['objectRefId'];	$objectRefName = $configData['objectRefName'];		//G2M Details	$g2mAccount = $configData['g2mAccount'];	$g2mPassword = $configData['g2mPassword'];	$g2mKey = $configData['g2mKey'];// *****END CONFIGURATION*****// Initialize the apptivo_toolset objectinclude(dirname(__FILE__) . DIRECTORY_SEPARATOR . 'inc' . DIRECTORY_SEPARATOR . 'apptivo_toolset.php');include(dirname(__FILE__) . DIRECTORY_SEPARATOR . 'inc' . DIRECTORY_SEPARATOR . 'create_g2m.php');$apptivo = new apptivo_toolset($api_key, $access_key, $user_name);if(isset($_POST['starttime'])){		$subject = 'Apptivo Demo - '.$_POST['companyName'];	$contactEmail = $_POST['contactEmail'];		//We need to format the dates into a G2M format (24 hours - MM/DD/YYYYTHH:MM:SS) vs Apptivo (MM/DD/YYYY & HH & MM & Meridian[1|2])	$g2mStartTime = str_replace(' ','T',$_POST['starttime']).':00';	$g2mEndTime = str_replace(' ','T',$_POST['endtime']).':00';	$start_arr = explode(' ',$_POST['starttime']);	$start_time_arr = explode(':',$start_arr[1]);	$end_arr = explode(' ',$_POST['endtime']);	$end_time_arr = explode(':',$end_arr[1]);	$startDateArr = explode('-',$start_arr[0]);	$apptivoStartDate = $startDateArr[1].'/'.$startDateArr[2].'/'.$startDateArr[0];	$endDateArr = explode('-',$end_arr[0]);	$apptivoEndDate = $endDateArr[1].'/'.$endDateArr[2].'/'.$endDateArr[0];	$apptivoStartTimeMinute = $start_time_arr[1];	$apptivoEndTimeMinute = $end_time_arr[1];	$closeDate = date("m/d/Y",strtotime('+6 weeks',strtotime($apptivoStartDate)));	if(intval($start_time_arr[0]) > 12) {		$apptivoStartTimeMeridian = 1;		$apptivoStartTimeHour = intval($start_time_arr[0])-12;	}else{		$apptivoStartTimeMeridian = 0;		$apptivoStartTimeHour = $start_time_arr[0];	}	if(intval($end_time_arr[0]) > 12) {		$apptivoEndTimeMeridian = 1;		$apptivoEndTimeHour = intval($end_time_arr[0])-12;	}else{		$apptivoEndTimeMeridian = 0;		$apptivoEndTimeHour = $end_time_arr[0];	}		$matched_contacts = $apptivo->search_contacts_by_text($contactEmail);	if($matched_contacts->contacts) {		//How many returned contacts should we check?		$max_count = 50;		//Since search won't be exact, need to validate the returned email matches passed in value		for ($i = 0; $i <= $max_count; $i++) {			if($matched_contacts->contacts[$i]->contactEmail == $contactEmail) {				print 'I found the contact: '.$matched_contacts->contacts[$i]->firstName.' '.$matched_contacts->contacts[$i]->lastName.' '.$matched_contacts->contacts[$i]->contactEmail.' <br>';				$contactId = $matched_contacts->contacts[$i]->contactId;				$contactFirstName = $matched_contacts->contacts[$i]->firstName;				$contactLastName = $matched_contacts->contacts[$i]->lastName;				$contactCustomerName = urlencode($matched_contacts->contacts[$i]->accountName);				$contactCustomerId = $matched_contacts->contacts[$i]->accountId;				if(trim($contactCustomerName) == trim($_POST['companyName'])) {					print 'I found the matching customer for this contact: '.$contactCustomerName.'<br>';					$opportunity_object = get_oppportunity_for_known_customer($contactCustomerName, $contactCustomerId, $contactFirstName, $contactLastName, $contactId, $closeDate);					if ($opportunity_object->opportunity) {						$opportunity_object = $opportunity_object->opportunity;					}					$contactMatchFound = true;					break 3;				}else{					Print 'We have contact match.  But customer name does not match company submitted.<br>';				}
			}		}	}			if(!$contactMatchFound) {		print 'We FAILED to match the contact based on email ID: '.$contactEmail.'<br>';		$matched_customer = $apptivo->search_customers_by_name(urlencode($_POST['companyName']));				print_r($matched_customer);				if($matched_customer->customers) {			$max_count = 50;			//Since search won't be exact, need to validate the returned email matches passed in value			for ($i = 0; $i <= $max_count; $i++) {				print 'we found a customer named: '.$matched_customer->customers[$i]->customerName.', now we will check the associated contacts.<br>';				$customerId = $matched_customer->customers[$i]->customerId;				$customerName = urlencode($matched_customer->customers[$i]->customerName);				$associatedContacts = $apptivo->search_contacts_by_customer($customerName, $customerId);				foreach ($associatedContacts->contacts as $curContact) {					if(trim($curContact->firstName) == trim($_POST['firstName']) && trim($curContact->lastName) == trim($_POST['lastName'])) {						$contactId = $curContact->contactId;						$contactFirstName = urlencode($curContact->firstName);						$contactLastName = urlencode($curContact->lastName);						$contactCustomerName = $customerName;						$contactCustomerId = $customerId;						$contactMatchMade = true;						$customerMatchMade = true;					}				}				if($contactMatchMade == true) {					print 'We found this customer with company name: '.$customerName.' | customer has associated contact with matching name: '.$curContact->firstName.' '.$curContact->lastName.'<br>';					$opportunity_object = get_oppportunity_for_known_customer($contactCustomerName, $contactCustomerId, $contactFirstName, $contactLastName, $contactId, $closeDate);					if ($opportunity_object->opportunity) {						$opportunity_object = $opportunity_object->opportunity;					}				}else{					print 'We found this customer with company name: '.$customerName.' | but FAILED to match associated contact with name: '.trim($curContact->lastName) == trim($_POST['lastName']).'.  Checking next matched customer if available.<br>';				}			}		}				if(!$customerMatchMade) {			print 'We FAILED to match a customer: '.$_POST['companyName'].'.  Now we will attempt to find a contact by name.<br>';			$matched_contacts = $apptivo->search_contacts_by_name($_POST['firstName'],$_POST['lastName']);			if($matched_contacts->contacts) {				print 'We matched a contact by name: '.$matched_contacts->contacts[0]->firstName.' '.$matched_contacts->contacts[0]->lastName.'<br>';						}else{				print 'We FAILED to match a contact by name: '.$_POST['firstName'].' '.$_POST['lastName'].'<br>';				$matched_customers = $apptivo->search_customers_by_name($_POST['firstName'].' '.$_POST['lastName']);				if($matched_customers->customers) {					print 'We matched a customer using the contact first/last name ('.$_POST['firstName'].' '.$_POST['lastName'].') to the customer named: '.$matched_customers->customers[0]->customerName.'<br>';									}else{					print 'We FAILED to match a customer by using contact first/last name: '.$_POST['firstName'].' '.$_POST['lastName'].'<br>';										//Create array of common fields for this customer										$customerData = Array (						'customerNumber' => 'Auto+generated+number',						'customerName' => urlencode($_POST['companyName']),						'contactEmail' => urlencode($_POST['contactEmail']),						'assigneeObjectRefId' => $objectRefId,						'assigneeObjectRefName' => $objectRefName					);						$newCustomer = $apptivo->create_customer($customerData, $input_phone_numbers, $input_addresses, $input_emails, $input_custom_attributes);										//Create array of common fields for this contact					$contactData = Array (						'firstName' => urlencode($_POST['firstName']),						'lastName' => urlencode($_POST['lastName']),						'accountName' => urlencode($newCustomer->customer->customerName),						'accountId' => $newCustomer->customer->customerId,						'contactEmail' => urlencode($_POST['contactEmail']),						'assigneeObjectRefId' => $objectRefId,						'assigneeObjectRefName' => $objectRefName					);						$newContact = $apptivo->create_contact($contactData, $input_phone_numbers, $input_addresses, $input_emails, $input_custom_attributes);										print 'Just created a brand new Customer & Contact - Going to create an opportunity now<br>';					$contactId = $newContact->contact->contactId;					$contactFirstName = urlencode($newContact->contact->firstName);					$contactLastName = urlencode($newContact->contact->lastName);					$contactCustomerName = $newCustomer->customer->customerName;					$contactCustomerId = $newCustomer->customer->customerId;					$opportunity_object = get_oppportunity_for_known_customer($contactCustomerName, $contactCustomerId, $contactFirstName, $contactLastName, $contactId, $closeDate);					if ($opportunity_object->opportunity) {						$opportunity_object = $opportunity_object->opportunity;						print 'We just successfully created a new opportunity called: '.$opportunity_object->opportunityName.'<br>';					}else{						print 'We just FAILED to create a new opportunity for '.$contactCustomerName.'<br>';					}				}			}		}	}		//Now that we have an opportunity object available, we'll create a g2m, create an apptivo event with g2m details, and add demo summary to opportunity	$new_g2m_object = create_g2m_mtg($subject,$g2mStartTime,$g2mEndTime,$g2mAccount,$g2mPassword,$g2mKey);		$eventData = Array (		'subject' => urlencode($subject),		'location' => urlencode('GoTo Meeting'),		'assigneeDetails' => Array (			Array (				'objectId' => 8,				'objectRefId' => $objectRefId,			),			Array (				'objectId' => 2,				'objectRefId' => $contactId,			)		),		'associatedObjects' => Array (			Array (				'objectId' => 2,				'objectRefId' => $contactId,				'objectRefName' => $contactFirstName.'+'.$contactLastName,				'objectName' => 'Contact'			),			Array (				'objectId' => 3,				'objectRefId' => $contactCustomerId,				'objectRefName' => $contactCustomerName,				'objectName' => 'Customer'			),			Array (				'objectId' => 11,				'objectRefId' => $opportunity_object->opportunityId,				'objectRefName' => urlencode($opportunity_object->opportunityName),				'objectName' => 'Opportunity'			)		),		'startDate' => urlencode($apptivoStartDate),		'endDate' => urlencode($apptivoEndDate),		'allDayEvent' => 'N',		'startTimeHour' => $apptivoStartTimeHour,		'startTimeMinute' => $apptivoStartTimeMinute,		'startTimeMeridian' => $apptivoStartTimeMeridian,		'endTimeHour' => $apptivoEndTimeHour,		'endTimeMinute' => $apptivoEndTimeMinute,		'endTimeMeridian' => $apptivoEndTimeMeridian,		'description' => urlencode('1.  Please join my meeting.\n'.$new_g2m_object[0]->joinURL.'\n\n2.  Use your microphone and speakers (VoIP) - a headset is recommended.  Or, call in using your telephone.\n\nDial '.str_replace(' Access','\nAccess',$new_g2m_object[0]->conferenceCallInfo).'\nAudio PIN: Shown after joining the meeting\n\nMeeting ID: '.$new_g2m_object[0]->meetingid.'\n\n')	);	$created_event = $apptivo->create_event($eventData);	if($created_event) {		print 'Just successfully created an event<br>';	}else{		print 'Just FAILED to created an event<br>';	}	$opportunityData = Array (		'description' => urlencode($_POST['demoSummary']),	);		$attributeNames = Array (		'description'	);	$updated_opportunity = $apptivo->update_opportunity($opportunity_object->opportunityId,json_encode($attributeNames),json_encode($opportunityData));	if($updated_opportunity) {		print 'Just successfully updated the opportunity: '.$updated_opportunity->opportunityName.'<br>';	}else{		print 'Just FAILED to updated the opportunity: '.$opportunity_object->opportunityName.'<br>';	}}print '	<html>		<head>			<title>Apptivo Demo Booking Tool</title>			<!--Requirement jQuery-->			<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>			<!--Load Script and Stylesheet -->			<script type="text/javascript" src="jquery.simple-dtpicker.js"></script>			<link type="text/css" href="jquery.simple-dtpicker.css" rel="stylesheet" />			<link rel="stylesheet" href="http://yui.yahooapis.com/pure/0.6.0/pure-min.css">						<style type="text/css">				body { width:75%;margin:10% 0% 0% 25%; text-align:center; }				body .pure-form-aligned textarea {height:200px;min-width:400px;}				body .pure-form-aligned input, body .pure-form-aligned label {min-width:400px;}			</style>		</head>		<body>			<form class="pure-form pure-form-aligned" action="'.$_SERVER['REQUEST_URI'].'" method="post" name="form">				<fieldset>					<div class="pure-control-group">						<label for"starttime">Start Time</label>						<input type="text" id="starttime" name="starttime" value="'.$_POST['starttime'].'">						<script type="text/javascript">							$(function(){								$(\'*[name=starttime]\').appendDtpicker({									"closeOnSelected": true,									"minuteInterval": 15								});							});						</script>					</div>					<div class="pure-control-group">						<label for="endtime">End Time</label>						<input type="text" id="endtime" name="endtime" value="'.$_POST['endtime'].'">						<script type="text/javascript">							$(function(){								$(\'*[name=endtime]\').appendDtpicker({									"closeOnSelected": true,									"minuteInterval": 15								});							});						</script>					</div>					<div class="pure-control-group">						<label>First Name</label>						<input type="text" name="firstName" value="'.$_POST['firstName'].'"/>					</div>					<div class="pure-control-group">						<label>Last Name</label>						<input type="text" name="lastName" value="'.$_POST['lastName'].'" />					</div>					<div class="pure-control-group">						<label>Company</label>						<input type="text" name="companyName" value="'.$_POST['companyName'].'" />					</div>					<div class="pure-control-group">						<label>Email</label>						<input type="text" name="contactEmail" value="'.$_POST['contactEmail'].'" />					</div>					<div class="pure-control-group">						<label>Quick Summary of Information</label>						<textarea name="demoSummary" value=""/>'.$_POST['demoSummary'].'</textarea>					</div>					<div class="pure-controls">						<button type="submit" class="pure-button pure-button-primary">Submit</button>					</div>				</fieldset>			</form>		</body>	</html>';function get_oppportunity_for_known_customer($customerName, $customerId, $contactFirstName, $contactLastName, $contactId, $closeDate) {	//This is the scenario where we have for sure identified a contact/customer combo.  Checking for existing deals on these records before creating.	global $apptivo;	global $objectRefName;	global $objectRefId;	$matched_opportunity = $apptivo->search_opportunities_by_customer($customerName,$customerId);	if($matched_opportunity->opportunities) {		print 'I found an existing opportunity named: '.$matched_opportunity->opportunities[0]->opportunityName.'<br><br>';		$target_opportunity = $matched_opportunity->opportunities[0];	}else{		print 'I did not find an existing opportunity for the customer ('.$customerName.'), going to create one now<br>';		//Whether we have a lead or not, we're going to generate an opportunity since none exists		$opportunity_data = Array (			'opportunityName' => $customerName.'+User+Licenses',			'salesStageName' => urlencode('Demo/Product Review'),			'salesStageId' => '107602',			'probability' => '30.00',			'opportunityCustomer' => $customerName,			'opportunityCustomerId' => $customerId,			'opportunityContact' => urlencode($contactFirstName.' '.$contactLastName),			'opportunityContactId' => $contactId,			'opportunityTypeName' => urlencode('User Licenses'),			'opportunityTypeId' => '10034',			'assignedToObjectRefName' => $objectRefName,			'assignedToObjectRefId' => $objectRefId,			'closeDate' => urlencode($closeDate),		);		$target_opportunity = $apptivo->create_opportunity($opportunity_data, $custom_attributes);				//Now we have an opportunity, check to see if a lead exists so we can update & associate it		$matched_lead = $apptivo->search_leads_by_customer($customerName,$customerId);				if($matched_lead->leads) {			//Let's update the lead status to converted to archive it away, then we'll generate opportunity			//First ensure we have proper value for "converted" status			print 'I found an existing lead, going to mark it as converted<br>';			$leads_settings = $apptivo->get_leads_settings();			foreach ($leads_settings->leadStatuses as $current) {				if($current->meaning == 'Converted') {					$leadStatus = $current->lookupCode;					break;				}			}			$leadData = Array (				'leadStatus' => $leadStatus,				'leadStatusMeaning' => urlencode('Converted'),				'isNewCustomer' => '',			);				$attributeNames = Array (				'leadStatus'			);				//Next we're going to update the accountName (customer) field on the contact				$updated_lead = $apptivo->update_lead($matched_lead->leads[0]->leadId, json_encode($attributeNames), json_encode($leadData));		}	}		return $target_opportunity;}?>